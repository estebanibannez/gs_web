<style>
    .form-group-sm {
        padding-bottom: 5px;
    }

    .btnes {
        padding: 1px;
    }

    label {
        margin-left: 20px;
    }

    #datepicker {
        width: 180px;
        margin: 0 20px 20px 20px;
    }

        #datepicker > span:hover {
            cursor: pointer;
        }

    textarea {
        resize: none;
        width: 100px;
        height: 50px;
    }

    .nav-tabs-custom > .nav-tabs > li.active {
        border-top-color: #ffc800 !important;
    }
</style>
<div class="row">
    <div class="col-md-12">
        <div class="box box-solid">
            <div class="box-header">
                <select class="form-control" id="tipoFactura">
                    <option value="33" selected>FACTURA ELECTRONICA (Tipo 33)</option>
                    <option value="34">FACTURA NO AFECTA O EXENTA ELECTRONICA (Tipo 34)</option>
                </select>
            </div>
        </div>
    </div>
</div>

<div class="row">

    <div class="col-lg-6 col-md-8">
        <div class="box box-solid">
            <div class="box-body">

                <div class="form-group-sm">
                    <span class="col-sm-4">Rut :</span>
                    <div class="col-sm-6" id="selBx">
                        <select id="selectClie" name="id_prov" style="width:100%" class="form-control">
                            <option value="" selected="selected"></option>
                        </select>
                    </div>
                    <div class="col-sm-6" id="inptBx" hidden>
                        <input type="text" name="id_prov" id="selectClie" @*oninput="rutEsValido(this)"*@ class="form-control" />
                    </div>
                    <div class="col-sm-2 pull-left">
                        <a class="btn btn-default btn-xs" id="add_new">
                            <i class="fa fa fa-file-o"></i>
                        </a>
                        <a class="btn btn-default btn-xs" id="delinpt" style="display:none">
                            <i class="fa fa fa-close"></i>
                        </a>
                    </div>
                </div>

                <div class="form-group-sm">
                    <span class="col-sm-4">Razón Social :</span>
                    <div class="col-sm-8">
                        <input type="text" class="form-control" id="bxRazonSocial">
                    </div>
                </div>

                <div class="form-group-sm">
                    <span class="col-sm-4">Giro :</span>
                    <div class="col-sm-8">
                        <input type="text" class="form-control" id="bxGiro" maxlength="40" placeholder="40 caracteres Máx.">
                    </div>
                </div>

                <div class="form-group-sm">
                    <span class="col-sm-4">Dirección :</span>
                    <div class="col-sm-8" data-toggle="tooltip" data-placement="right">
                        <input type="text" class="form-control" id="bxDireccion">
                    </div>
                </div>

                <div class="form-group-sm">
                    <span class="col-sm-4">Comuna :</span>
                    <div class="col-sm-8">
                        <input type="text" class="form-control" id="bxComuna">
                    </div>
                </div>

                <div class="form-group-sm">
                    <span class="col-sm-4">Ciudad :</span>
                    <div class="col-sm-8">
                        <input type="text" class="form-control" id="bxCiudad">
                    </div>
                </div>

                <div class="form-group-sm">
                    <span class="col-sm-4">Teléfono :</span>
                    <div class="col-sm-8">
                        <input type="text" class="form-control" id="bxFono">
                    </div>
                </div>

            </div>

        </div>
    </div>

    <div class="col-lg-4 col-md-4">
        <div class="box box-solid">
            <div class="box-body">
                <div class="form-group-sm">
                    <span class="col-sm-4 col-md-12"> <i class="fa fa-calendar"></i> Fecha Documento</span>
                    <div class="col-sm-8 col-md-12">
                        <input type="text" class="form-control bg-teal-gradient" id="dateDocu">
                    </div>
                </div>
                <div class="form-group-sm">
                    <span class="col-sm-4 col-md-12">Forma de pago</span>
                    <div class="col-sm-8 col-md-12">
                        <select class="form-control" id="FormaPago">
                            <option value="3">Contado</option>
                            <option value="14">Efectivo</option>
                            <option value="4">Cheque al día</option>
                            <option value="8">Deposito o transferencia</option>
                            <option value="14" selected>Credito</option>
                            <option value="15">Cheque</option>
                            <option value="5">Cheque a fecha</option>
                            <option value="6">Anticipo Cliente</option>
                            <option value="9">Ajuste</option>
                        </select>
                    </div>
                </div>
                <div class="form-group-sm">
                    <span class="col-sm-4 col-md-12">Tipo de Venta</span>
                    <div class="col-sm-8 col-md-12">
                        <select class="form-control" id="tipoVenta">
                            <option value="1" selected>Del Giro</option>
                            <option value="2">Activo Fijo</option>
                            <option value="3">Bienes Raíces</option>
                        </select>
                    </div>
                </div>
                <div class="form-group-sm">
                    <span class="col-sm-4 col-md-12"><i class="fa fa-dollar"></i> Valores Unitarios </span>
                    <div class="col-sm-8 col-md-12">
                        <select class="form-control" id="ValorUnidades">
                            <option value="0">NETO</option>
                            <option value="1" disabled>BRUTO</option>
                        </select>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-lg-2 col-md-12">
        <div class="box box-solid">
            <div class="box-body">
                <button type="button" class="btn btn-default btn-block btn-xs" id="btn-continuar">
                    Continuar
                    <span class="fa fa-save"></span>
                </button>

                <button type="button" class="btn btn-default btn-block btn-xs" disabled id="btn-cancelar">
                    Cancelar
                    <span class="fa fa-times"></span>
                </button>

                <button type="button" class="btn btn-default btn-block btn-xs" disabled id="btn-modificar">
                    Modificar
                    <span class="fa fa-save"></span>
                </button>
            </div>
        </div>
    </div>

</div>

<!--caja  prod-->
<div class="row" id="_bxProd" style="display:none">
    <div class="col-md-12">
        <div class="box box-solid">
            <div class="box-body">

                <div class="col-lg-7">

                    @*<div class="form-group-sm" id="_bxCodigoProd">
                                <span class="col-sm-2">Codigo</span>
                                <div class="col-sm-2">
                                    <input type="text" class="form-control" name="bxCodigoProd" id="bxCodigoProd" data-toggle="tooltip" title="Indique un codigo para el producto">
                                </div>
                        </div>*@

                    <div class="row" style="padding-bottom:0.3em">
                        <div class="col-sm-12">
                            <div class="form-group" id="_bxDescripcion">
                                <span class="col-sm-4">Descripción</span>
                                <div class="col-sm-8">
                                    <input type="text" class="form-control" id="bxDescripcion" data-toggle="tooltip" title="Indique una descripción para el producto">
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="row" style="padding-bottom:0.3em">
                        <div class="col-sm-6">
                            <div class="form-group" id="_bxCantidad">
                                <span class="col-sm-4">Cantidad</span>
                                <div class="col-sm-8">
                                    <input type="number" class="form-control" min="1" id="bxCantidad" data-toggle="tooltip" title="Indique cantidad como minimo 1">
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group" id="_bxUnitario">
                                <span class="col-sm-6">Valor unidad</span>
                                <div class="col-sm-6">
                                    <input type="text" class="form-control" id="bxUnitario" data-toggle="tooltip" title="Ingrese un valor...">
                                </div>
                            </div>
                        </div>
                    </div>

                    <!--no aplica por el momento.-->
                    @*<div class="form-group-sm">
                                      <span class="col-sm-2">Descuento</span>
                                      <div class="col-sm-2">
                                          <select id="tipoDescuento" class="form-control">
                                              <option value="pesos">$</option>
                                              <option value="porcentaje">%</option>
                                          </select>

                                      </div>
                                      <div class="col-sm-2">
                                          <input type="text" class="form-control" id="bxDescuento">
                                      </div>
                        </div>*@

                    <div class="row">
                        <div class="form-group">
                            <div class="col-sm-12">
                                <span class="col-sm-8">Total</span>
                                <div class="col-sm-4">
                                    <input type="text" class="form-control" id="bxTotalProd" min="1" pattern="^[0-9]+" readonly>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-lg-2">
                    <div class="form-group">
                        <div class="checkbox">
                            <label>
                                <input type="checkbox" id="chkExento" checked>
                                <i>Ítem Exento</i>
                            </label>
                        </div>

                        <div class="checkbox">
                            <label>
                                <input type="checkbox" id="chkCc" disabled>
                                <i>Centro Costo</i>
                            </label>
                        </div>

                        <div class="checkbox">
                            <label>
                                <input type="checkbox" id="chkBodega" disabled>
                                <i>Bodega</i>
                            </label>
                        </div>
                    </div>
                </div>

                <div class="col-lg-3">
                    <button class="btn btn-app pull-right" type="button" id="btn-insertar-prod">
                        <i class="fa fa-edit"></i> Agregar
                    </button>
                </div>

            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        <div class="box box-solid">
            <div class="box-body">
                <div class="box-body table-responsive no-padding">
                    <table class="table table-hover" style="width:100%" id="tblData">
                        <thead>
                            <tr>
                                <th><i>ID</i></th>
                                @*<th>Código</th>*@
                                <th><i>Descripción</i></th>
                                <th><i>Cantidad</i></th>
                                <th><i>Unitario</i></th>
                                @*<th>Descuento</th>*@
                                @*<th>Tipo Descto</th>*@
                                <th><i>Exento</i></th>
                                <th><i>Sub Total</i></th>
                                @*<th>C. Costo</th>*@
                                <th></th>
                            </tr>
                        </thead>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>


<div class="row">
    <div class="col-lg-6">
        <div class="nav-tabs-custom">
            <ul class="nav nav-tabs">
                <li class="active"><a href="#tab_1" data-toggle="tab">Observaciones</a></li>
            </ul>
            <div class="tab-content">
                <div class="tab-pane active" id="tab_1">
                    <textarea class="form-control" rows="4" style="resize: none;"></textarea>
                </div>
            </div>
        </div>
    </div>

    <div class="col-lg-6">
        <div class="nav-tabs-custom">
            <ul class="nav nav-tabs">
                <li class="active"><a href="#tab_1" data-toggle="tab">Totales</a></li>
            </ul>
            <div class="tab-content">
                <!--no aplica por el momento.-->
                @*<div class="row">
                        <div class="col-md-12">
                            <div class="form-group-sm">
                                <div class="col-md-6">
                                    <select class="form-control" id="DescuRecar">
                                        <option value="0" selected>Aplicar Descuento </option>
                                        <option value="1">Aplicar recargo</option>
                                    </select>
                                </div>
                                <div class="col-md-2">
                                    <select class="form-control" id="TpoValor">
                                        <option value="$" selected>$</option>
                                        <option value="%">Porcentaje</option>
                                    </select>
                                </div>
                                <div class="col-md-4">
                                    <input type="number" class="form-control" id="ValorDR" value="0" min="0">
                                </div>
                            </div>
                            <hr />
                            <div class="form-group-sm">
                                <div class="col-md-12">
                                    <textarea type="text" name="GlosaDR" id="GlosaDR" value="" class="textarea" style="width:100%" maxlength="45" placeholder="Especificación del descuento o recargo."></textarea>
                                </div>
                            </div>
                        </div>
                    </div>*@
                <div class="box-body">
                    @*<div class="form-group">
                            <div class="col-md-6 col-xs-6">
                                <span>Valor Recargo</span>
                                <div>
                                    <input type="text" id="valorRecargoTotal" readonly class="form-control">
                                </div>
                            </div>
                        </div>*@

                    @*<div class="form-group-sm">
                            <div class="col-md-6 col-xs-6">
                                <span>Valor Descuento</span>
                                <div>
                                    <input type="text" id="valorDescuentoTotal" readonly class="form-control">
                                </div>
                            </div>
                        </div>*@
                    <div class="col-sm-6">
                        <div class="form-group">
                            <div class="col-xs-12">
                                <span>Valor Exento</span>
                                <div>
                                    <input type="text" id="ValorExentoTotal" readonly class="form-control">
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-xs-12">
                                <span>Valor Neto</span>
                                <div>
                                    <input type="text" id="ValorNetoTotal" readonly class="form-control">
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            <div class="col-xs-12">
                                <span class="text-info">19% I.V.A</span>
                                <div>
                                    <input type="text" id="Iva" readonly class="form-control">
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-xs-12">
                                <i>Valor Total</i>
                                <div>
                                    <input type="text" id="ValorTotal" readonly class="form-control" style="background-color:rgba(255, 200, 0, 0.35)">
                                </div>
                            </div>
                        </div>
                    </div>

                    <div class="col-xs-12" style="padding-top:0.3em">
                        <button class="btn btn-app btn-block" id="btnGuardarDoc" disabled>
                            <i class="fa fa-save"></i> Emitir Documento
                        </button>
                    </div>
                </div>
            </div>



        </div>
    </div>
</div>

<script>
    //var dateWorking = new Date();
    //este indice lo ocupo mas abajo , para asignarle un id a los detalles que se irán agregando al datatable, que me sirve para eliminar del arreglo.
    var i = 0;
    //creo los arrays , para luego insertarles información
    var Receptor = [];
    var Detalle = [];
    var Totales = [];
    var Datosfactura = [];
    var DscRcgGlobal = [];

    var table = $("#tblData").DataTable({
        "bLengthChange": false,
        "info": false,
        "columnDefs": [
            { "visible": false, "targets": 0 }
        ],
        "fnCreatedRow": function (nRow, aData, iDataIndex) {
            debugger;

            let btn = `<button class="btn btn-danger btn-xs" id="${iDataIndex}" onclick="eliminar(this, ${iDataIndex})"><i class="fa fa-trash-o"></i></button>`;

            //let Codigo = $('td:eq(1)', nRow).text();
            //let descuento = $('td:eq(5)', nRow).text();
            //let ccosto = $('td:eq(9)', nRow).text();
            let id = iDataIndex;
            let Descripcion = $('td:eq(0)', nRow).text();
            let cantidad = $('td:eq(1)', nRow).text();
            let valorUnitario = $('td:eq(2)', nRow).text();
            let exento = $('td:eq(3)', nRow).text();
            let subtotal = $('td:eq(4)', nRow).text();
            $('td:eq(5)', nRow).append(btn);

            let detalle = new addDetalle(id, iDataIndex, Descripcion, cantidad, valorUnitario, /*descuento*/ exento, subtotal, /*ccosto*/);
            //devolveré si está o no el detalle.
            let ObjetoDetalle = CreateArrayObj(detalle);
            let elObj = ReasigNroLinDet(ObjetoDetalle);


            //valido si tiene descuento , recargo o nada. descuento =0 , recargo = 1
            //let tieneGlob = $("#DescuRecar").val();
            //let valor = $('#ValorDR').val();

            totales(elObj);
            console.log(elObj);
        }
    });

    //está funcion reasigna los numeros de las lineas de detalle al eliminar o agregar un detalle (EJEMPLO : si de 5 registros elimino el 3 , me queda 1, 2 , 4 ,5).
    //por lo cual faltaría un numero de línea, por está razón se reasigna el orden al detalle de la factura.
    function ReasigNroLinDet(elObjeto) {
        $.each(elObjeto, function (indice, elemento) {
            debugger;
            elemento.NroLinDet = indice + 1;
        });
        return elObjeto;
    }

    //VALIDACIÓN QUE SE INGRESEN SOLO NUMEROS A LAS CAJAS.
    $("#bxCantidad").keypress(function (e) {
        if (String.fromCharCode(e.keyCode).match(/[^0-9]/g)) return false;
    });
    $("#bxUnitario").keypress(function (e) {
        if (String.fromCharCode(e.keyCode).match(/[^0-9]/g)) return false;
    });
    $("#bxDescuento").keypress(function (e) {
        if (String.fromCharCode(e.keyCode).match(/[^0-9]/g)) return false;
    });
    $("#ValorDR").keypress(function (e) {
        if (String.fromCharCode(e.keyCode).match(/[^0-9]/g)) return false;
    });

    //FUNCION QUE PASA OBJETOS DETALLE AL ARREGLO DINAMICAMENTE.
    function CreateArrayObj(detalle) {
        Detalle.push(detalle);
        return Detalle;
    }

    //CREO DETALLE CON SUS VALORES.
    function addDetalle(id, NroLinDet, /*cod,*/ descripcion, cantidad, valorUnitario, /*descuento*/ exento, subtotal, /*ccosto*/) {
        //this.codigoItem = cod;
        //this.descuento = descuento;
        //this.ccosto = ccosto;
        this.id = id;
        this.NroLinDet = NroLinDet;
        this.NmbItem = descripcion;
        this.MontoItem = subtotal;
        this.QtyItem = cantidad;
        this.PrcItem = valorUnitario;
        this.exento = exento;
        this.subtotal = subtotal;

    }

    //INGRESA PRODUCTO AL DATATABLE SIN ANTES VALIDAR LOS CAMPOS.
    $("#btn-insertar-prod").click((e) => {

        //let validoCodigo = $('#bxCodigoProd').val();
        let validoDescr = $('#bxDescripcion').val();
        let validoCantidad = $('#bxCantidad').val();
        let validoValorUni = $('#bxUnitario').val();

        //validación quitada ya que puede que no lleve codigo el producto obligatoriamente.
        //if (validoCodigo == "") {
        //    $('#bxCodigoProd').focus();
        //    $('#_bxCodigoProd').addClass('has-error');
        //    $('#bxCodigoProd').tooltip({
        //        placement: "right",
        //        trigger: "focus"
        //    });
        //}

        if (validoDescr == "") {
            $('#bxDescripcion').focus();
            $('#_bxDescripcion').addClass('has-error');
            $('#bxDescripcion').tooltip({
                placement: "right",
                trigger: "focus"
            });
        }

        if (validoCantidad == "") {
            $('#bxCantidad').focus();
            $('#_bxCantidad').addClass('has-error');
            $('#bxCantidad').tooltip({
                placement: "right",
                trigger: "focus"
            });
        }

        if (validoValorUni == "") {
            $('#bxUnitario').focus();
            $('#_bxUnitario').addClass('has-error');
            $('#bxUnitario').tooltip({
                placement: "right",
                trigger: "focus"
            });
        }

        if (validoDescr && validoCantidad && validoValorUni != "") {
            var addProd = returnProduc();
            //para agregar una columna datatable necesita un arreglo que contenga la misma cantidad de campos.
            table.row.add(addProd).draw();
            emptyProd()
        }
    });

    //Retorno un detalle de producto para pasarlo al datatable //
    function returnProduc() {
        var produc = [];
        produc.push(i ++)
        //produc.push($("#bxCodigoProd").val())
        produc.push($("#bxDescripcion").val())
        produc.push($("#bxCantidad").val())
        produc.push($("#bxUnitario").val())
        //produc.push($("#bxDescuento").val())
        //produc.push($("#tipoDescuento").text())
        produc.push($("#chkExento").prop("checked") ? 'Sí' : 'No')
        produc.push($("#bxTotalProd").val())
        //produc.push($("#chkCc").prop("checked") ? 'Sí' : 'No')
        produc.push("")
        return produc;
    }


    function datosFactura(tipfac, fechaDocumento, formaPago, TipoVenta, ValorUnitario) {
        this.TipoDTE = tipfac;
        this.FchEmis = fechaDocumento;
        this.FmaPago = formaPago;
        this.TipoCtaPago = TipoVenta;
        this.MntBruto = ValorUnitario;
    }

    function createReceptor(rut ,nombre, giro, comuna, ciudad, direccion , contacto, fono) {
        this.RutRecep = rut;
        this.RznSocRecep = nombre;
        this.GiroRecep = giro;
        this.Contacto = contacto;
        this.DirRecep = direccion;
        this.CmnaRecep = comuna;
        this.CiudadRecep = ciudad;
        this.fono = fono;
    }

    function createTotales(exento, descuento, neto, iva, valorTotal) {
        this.MntNeto = neto;
        this.MntExe = exento;
        this.TasaIVA = ($("#tipoFactura").val() == "34" ? 0 : 19);
        this.IVA = iva;
        this.MntTotal = valorTotal;
    }

    //SE APLICABA PARA DESCUENTOS -- NO SÉ UTILIZARÁ POR ESTÁ VEZ.
    function createDscRcgGlobal(TpoMov, GlosaDR, TpoValor, ValorDR) {
        this.NroLinDR = 1;
        this.TpoMov = (parseInt(TpoMov) == 0 ? "D" : "R"); // Indica el tipo de movimiento, texto 1 carácter D o R
        this.GlosaDR = GlosaDR; //Especificación del descuento o recargo, de tipo alfanumérico con un largo máximo de 45 caracteres.
        this.TpoValor = TpoValor; //Indica si el valor asociado al descuento es de tipo porcentaje (%) o  es un monto($), valor alfanumérico de 1 carácter y sus valores admitidos son: • %: Porcentaje • $: Monto (por ahora dejo $ solamente.)
        this.ValorDR = parseInt(ValorDR); //Valor del descuento o recargo en 16 enteros y 2 decimales.
        //this.IndExeDR = IndExeDR;  //Indica si el descuento o recargo afecta a ítems exentos.
    }

    //FUNCIÓN PARA ELIMINAR DEL DATATABLE Y EL ARREGLO.
    function eliminar(e, id) {
        var i = _inArray(id, Detalle);
        if ( i === -1) {
            //ArrayCentralizar.push(Obj);
        } else if (i !== -1) {
            //splice remueve elementos de un arreglo (recibe 2 parametros el indice y la cantidad de elementos que quiero remover en el array.)
            Detalle.splice(i, 1);
            ReasigNroLinDet(Detalle)
            totales(Detalle)
            console.log(Detalle)
        }
        $(e).parent().parent().fadeOut(400).remove();
    }

   $("#dateDocu").datepicker({ format: 'yyyy-mm-dd', todayHighlight: true }).datepicker("update", new Date());

   var selectCl = $("#selectClie").select2({
        ajax: {
            url: "@Url.Action("getClientes", "Facturacion")",
            dataType: 'json',
            delay: 250,
            data: function (params) {
                return {
                    q: params.term,
                    page_limit: 10
                };
            },
            processResults: function (data, params) {
                params.page = params.page || 1
                var results = [];
                jQuery.each(data.param, function (index, itemData) {
                    results.push({ text: itemData.nom_cliente, id: itemData.Rut });
                });
                return {
                    results: results,
                    pagination: {
                        more: (params.page * 30) < results.total_count
                    }
                };

            },
            cache: true
        },
        escapeMarkup: function (markup) { return markup; },
        minimumInputLength: 1,
        placeholder: 'Ingrese un Rut ...',
        //language: {
        //    inputTooShort: function () {
        //        return 'Ingrese un caracter de busqueda...';
        //    }
        //}
    });

    $('#selectClie').change(function (e) {
    //si existe un cliente seleccionado, activo las cajas
        if ($(this).val() != "") {
            getCliData($(this).val())
        }
    });

    //EVENTS BUTTONS
    //en caso de no encontrar el rut , botón nuevo desactiva select2 y muestra textbox para ingresar el rut manual
    $("#add_new").click(function () {
        $("#selBx").prop("hidden", true)
        $("#inptBx").prop("hidden", false)
        $("#delinpt").css("display", "")
        $("#selectClie").prop("id", "x")
    });

    //boton que oculta el textbox y vuelve a mostrar el select2
    $("#delinpt").click(function () {
        $("#selectClie").prop("id", "x")
        $("#x").prop("id", "selectClie" )
        $("#inptBx").prop("hidden", true)
        $("#selBx").prop("hidden", false)
        $("#delinpt").css("display", "none")
    });

    //activo y desactivo botones de la cabecera.
    $("#btn-continuar").click(() => {
        if ($("#selectClie").val() !== "") {
            $("#selBx").removeClass("has-error")
            desactivaBox()
            $("#btn-continuar").prop("disabled", true)
            $("#btn-cancelar").prop('disabled', false)
            $("#btn-modificar").prop('disabled', false)
            $("#selectClie").prop("disabled", true)
            $("#btn-insertar").prop("disabled", false)
            $("#btnGuardarDoc").prop("disabled", false)
            //MUESTRO CAJA PARA INGRESAR DETALLES A LA TABLA.
            $('#_bxProd').fadeIn(300)
        } else {
            $("#selectClie").focus()
            mensajeExitoModal("Falta llenar Campos","Para continuar indique el Receptor.", "3")
        }

    });

    $('#btn-modificar').click((e) => {
        activaBox()
        Receptor = [];
        Datosfactura = [];
        $("#btn-continuar").prop("disabled", false)
        $("#btn-modificar").prop('disabled', true)
        //$("#btn-referenciar").prop('disabled', true)
        //$("#btn-pendientes").prop('disabled', true)
        $("#selectClie").prop("disabled", false)
    });

    $('#btn-cancelar').click(function() {
        $('#_bxProd')
            .fadeOut(600)
        $('#btn-continuar').prop('disabled', false)
        $('#btn-modificar').prop('disabled', true)
        $(this).prop('disabled', true)
        $("#btnGuardarDoc").prop("disabled", true)
        emptyBox()
        emptyTotales()
        emptyProd()
        //limpio la tabla y creo una instancia nueva de los array para vaciarlos.
        cleanAll();
    });

    //BOTÓN GUARDAR ENVIA LA DATA AL CONTROLADOR.
    $('#btnGuardarDoc').click(function () {
        //ARREGLO CON LOS DATOS DEL RECEPTOR
        var receptor = new createReceptor(
            $('#selectClie').val(),
            $('#bxRazonSocial').val(),
            $('#bxGiro').val(),
            $('#bxComuna').val(),
            $('#bxCiudad').val(),
            $('#bxDireccion').val(),
            $('#bxMail').val(),
            $('#bxFono').val()
        );

        var totales = new createTotales(
            $('#ValorExentoTotal').val(),
            $('#valorDescuentoTotal').val(),
            $('#ValorNetoTotal').val(),
            $('#Iva').val(),
            $('#ValorTotal').val(),
        );

        var datoFactura = new datosFactura(
            parseInt($("#tipoFactura").val()),
            $("#dateDocu").val(),
            $("#FormaPago").val(),
            $("#tipoVenta").val(),
            $("#ValorUnidades").val()
        );

        // según lo conversado con el seba , pidé quitar estos campos.
        //var DscRcgGlob = new createDscRcgGlobal(
        //    $('#DescuRecar').val(),
        //    $('#GlosaDR').val(),
        //    $('#TpoValor').val(),
        //    $('#ValorDR').val(),
        //);
        //DscRcgGlobal.push(DscRcgGlob);

        Datosfactura.push(datoFactura);
        Receptor.push(receptor);
        Totales.push(totales);

        //MantenerFecha();
        $.ajax({
            url: '@Url.Action("saveInfo", "Facturacion")',
            data: {
                receptor: JSON.stringify(Receptor),
                detalle: JSON.stringify(Detalle),
                totales: JSON.stringify(Totales),
                dscRcgGlobal: JSON.stringify(DscRcgGlobal),
                detallefactura: JSON.stringify(Datosfactura)
            },
            type: 'POST',
            success: (res) => {
                debugger;
                //AQUÍ VA LA RESPUESTA DEL CONTROLADOR.
                mensajeExitoModal("El Proceso se ha realizado con éxito...", res, "6")
            },
            error: (res) => {
                mensajeError("Ha ocurrido un error" + data)
            }
        });

    });


    //function MantenerFecha() {
    //    debugger;

    //    var from = $("#dateDocu").val().split("-")
    //    var f = new Date(from[2], from[1] - 1, from[0])
    //    dateWorking = f;
    //}

    //Valida que el descuento no sea menor que el total. (funcionando pero está vez no aplica)
    //var total_Prod = document.getElementById('bxDescuento')
    //total_Prod.addEventListener("change", function () {
    //    var total = $('#bxTotalProd').val()
    //    var x = Math.sign(total)
    //    if (x == -1) {
    //        $(this).val("")
    //        $("#bxTotalProd").val(Number($("#bxUnitario").val()) * Number($("#bxCantidad").val()) - Number($("#bxDescuento").val()));
    //    }
    //});


    //ACTIVACION Y DESACTIVACIÓN DE CAJAS DE LOS DATOS DEL RECEPTOR.
    function activaBox() {
        $("#bxRazonSocial").prop("readonly", false)
        $("#bxGiro").prop("readonly", false)
        $("#bxSucursal").prop("readonly", false)
        $("#bxDireccion").prop("readonly", false)
        $("#bxComuna").prop("readonly", false)
        $("#bxCiudad").prop("readonly", false)
        $("#bxMail").prop("readonly", false)
        $("#bxFono").prop("readonly", false)
        $("#bxVendedor").prop("readonly", false)
    }

    function desactivaBox() {
        $("#bxRazonSocial").prop("readonly", true)
        $("#bxGiro").prop("readonly", true)
        $("#bxSucursal").prop("readonly", true)
        $("#bxDireccion").prop("readonly", true)
        $("#bxComuna").prop("readonly", true)
        $("#bxCiudad").prop("readonly", true)
        $("#bxMail").prop("readonly", true)
        $("#bxFono").prop("readonly", true)
        $("#bxVendedor").prop("readonly", true)
    }
    //VACÍA LAS CAJAS DEL ENCABEZADO RECEPTOR.
    function emptyBox() {
        $('#selectClie').prop('disabled', false)
        $("#selectClie").val(null).trigger("change")
        $("#bxRazonSocial").val("")
        $("#bxGiro").val("")
        $("#bxSucursal").val("")
        $("#bxDireccion").val("")
        $("#bxComuna").val("")
        $("#bxCiudad").val("")
        $("#bxMail").val("")
        $("#bxFono").val("")
        $("#bxVendedor").val("")
    }

    function emptyProd() {
        $("#bxCodigoProd").val("")
        $("#bxCantidad").val("")
        $("#bxDescripcion").val("")
        $("#bxUnitario").val("")
        $("#bxTotalProd").val("")
        $("#bxDescuento").val("")
        if ($("#tipoFactura").val() == "34") {
            $("#chkExento").prop("checked", true)
            .prop("disabled", true)
        } else {
            $("#chkExento").prop("checked", false)
            .prop("disabled", false)
        }
        $("#chkExento").prop("checked", true)
        $("#chkCc").prop("checked", false)
        $("#chkBodega").prop("checked", false)
    }

    function emptyTotales() {
        $("#ValorExentoTotal").val("")
        $("#valorDescuentoTotal").val("")
        $("#valorRecargoTotal").val("")
        $("#ValorNetoTotal").val("")
        $("#Iva").val("")
        $("#ValorTotal").val("")
    }

    //FUNCIÓN QUE TRAE INFO DEL PROCEDURE
    function getCliData(id) {
        $.ajax({
            url: '@Url.Action("getDataClie", "Facturacion")',
            type: "POST",
            data: {id : id},
            success: (data) => {
                cargaData(data.data);
            }
        });
    }

    //LLENO LA VISTA CON LOS DATOS QUE TRAE LA FUNCIÓN ANTERIOR ESTÁ INFO VIENE DESDE EL PROCEDURE
    function cargaData(data) {
        $('#bxRazonSocial').val(data.nom_cliente);
        $('#bxDireccion').val(data.direccion);
        $('#bxComuna').val(data.comuna);
        $('#bxCiudad').val(data.ciudad);
        $('#bxGiro').val(jQuery.trim(data.giro).substring(0, 40));
        $('#bxMail').val(data.correo);
    }

    document.getElementById('tipoFactura')
        .addEventListener('change', function (e) {
                $("#btn-continuar").prop("disabled", false)
                $("#btn-modificar").prop("disabled", true)
                emptyBox()
                activaBox()
                emptyTotales()
                emptyProd()

                //limpio la tabla y creo una instancia nueva de los array para vaciarlos.
                cleanAll();
        })

    document.getElementById('bxDescripcion')
        .addEventListener('keyup', function (e) {
            if (this.value != "") {
                $("#_bxDescripcion").removeClass("has-error")
            };
        })

    document.getElementById('bxUnitario')
        .addEventListener('input', function (e) {
            if (this.value != "") {
                calculaTotalProd()
                $("#_bxUnitario").removeClass("has-error")
            } else {
                $("#_bxUnitario").addClass("has-error")
            }
        })

    let o = document.getElementById('bxCantidad');
    o.addEventListener('keyup', function (e) {
        if (this.value != "") {
            calculaTotalProd()
            $("#_bxCantidad").removeClass("has-error")
        };
    })

    o.addEventListener('mouseup', function (e) {
        if (this.value != "") {
            calculaTotalProd()
            $("#_bxCantidad").removeClass("has-error")
        };
    })

    //CALCULA LOS VALORES DEL PRODUCTO QUE SE AGREGARÁ AL DATATABLE
    function calculaTotalProd() {
        //------------------------------------------------------- descuentos no se aplica por el momento.
        //let descuento = (Number($("#bxDescuento").val()) == "" ? 0 : Number($("#bxDescuento").val()));
        //$("#bxTotalProd").val(parseInt(this.value) * valorUnitario - descuento);
        //----------------------------------------------------------------------------------------------

        let valorUnitario = (Number($("#bxUnitario").val()) == "" ? 0 : Number($("#bxUnitario").val()))
        let cantidadProd = Number($("#bxCantidad").val())

        //$("#bxTotalProd").val(valorUnitario * valorUnitario - descuento);
        $("#bxTotalProd").val(valorUnitario * cantidadProd);

    }

    //FUNCIÓN QUE AGREGA DETALLES AL ARREGLO
    function _inArray(id, arrayObj) {
        var salida = -1;
        $.each(arrayObj, function (indice, elemento) {
            if (elemento.id == id) {
                salida = indice;
            }
        });
        return salida;
    }

    //FUNCIÓN PARA CALCULAR LOS TOTALES
    function totales(array /*, descuentoGlobal, desc_recar*/) {
        var valorExento = 0;
        var valorNeto = 0;

        var tipoFactura = $("#tipoFactura").val();
        //ES FACTURA VENTA
        if (tipoFactura == "33") {
            $.each(array, function (i, elemento) {
                //SUMA LOS VALORES
                var e = (elemento.exento == "Sí" ? parseInt(elemento.subtotal) : 0);
                var n = (elemento.exento == "No" ? parseInt(elemento.subtotal) : 0);
                //no se aplicará descuento a cada unidad según reunión con sebastian.
                //var d = (elemento.descuento != "" ? parseInt(elemento.descuento) : 0);
                valorNeto += n;
                valorExento += e;
                //descuTotal += d;
            });

        //ES FACTURA VENTA NO AFECTA O EXENTA ELECTRÓNICA.
        } else {
            $.each(array, function (i, elemento) {
                debugger;
                var e = parseInt(elemento.subtotal);
                valorNeto = 0;
                valorExento += e;
                //descuTotal += d;
            });
        }
        calculaTotales(valorNeto, valorExento /*descuTotal, descuentoGlobal, desc_recar*/)
    }

    //FUNCIÓN QUE LLENA LAS CAJAS CON LOS TOTALES CORRESPONDIENTES A LA TOTALIDAD DE LOS DETALLES.
    function calculaTotales(netoTotal, valorExento /*descuTotal, valorDR, desc_recar*/) {
        let iva = Math.round(netoTotal * 0.19)
        emptyTotales();
        $('#ValorExentoTotal').val(valorExento)
        $('#ValorNetoTotal').val(netoTotal)
        $('#Iva').val(iva);
        //$('#valorDescuentoTotal').val(descuTotal)
        let ValorGlobalTotal = netoTotal + valorExento + iva /* + impuesto - retencion - CredEC*/;
        $('#ValorTotal').val(ValorGlobalTotal);

       // resto al neto total + el iva el descuento global.
       /* if (parseInt(desc_recar) == 0) {
            debugger;
            if (valorDR == 0) {
                $('#ValorTotal').val(ValorGlobalTotal);
            } else {
                // resto al neto total + el iva el descuento global.
                $('#ValorTotal').val(ValorGlobalTotal - parseInt(valorDR));
            }
        } else {
            //de lo contrario le sumo el recargo adicional a la factura.

            if (valorDR == 0) {
                $('#ValorTotal').val(ValorGlobalTotal);
            } else {
                valorDR = 0;
                // resto al neto total + el iva el descuento global.
                $('#ValorTotal').val(ValorGlobalTotal + parseInt(valorDR));
            }
        }*/
    }

    //Función que limpia los arreglos que serán enviados al controlados y vacía la información que contiene el datatable.
    function cleanAll(){
        table.clear().rows.add([]).draw();
        Receptor = [];
        Detalle = [];
        Totales = [];
        Datosfactura = [];
    }


      //---------EVENTS LISTENERS - VALIDACION DE CAMPOS HAS-ERROR------------//

    //Listener para descuento o recargo (se comenta por que está vez no aplica.)

    //const x = document.getElementById('ValorDR');
    //const tipoDR = document.getElementById('DescuRecar');


    //x.addEventListener("input", validateDR);
    //tipoDR.addEventListener("change", validateDR);

    //esta función realiza descuento o recargo (se comenta por que está vez no aplica.)
    /*
    function validateDR() {
        debugger;
        let DoR = $("#DescuRecar").val();
        let DRValue = $("#ValorDR").val();
        let valorTotal = $('#ValorTotal').val();

        let recargo = $('#valorRecargoTotal');
        let descuento = $('#valorDescuentoTotal');

        //valido que el total no venga vacío
        DRValue = (DRValue == "" ? 0 : DRValue);

        switch (DoR) {
            case "0":
                // DESCUENTO ---
                //si el descuento supera el valor total seteo 0 al D.R y doy foco.
                if (parseInt(DRValue) > parseInt(valorTotal))
                {
                    $("#ValorDR").val(0)
                        .focus();
                    totales(Detalle, DRValue, DoR)
                }
                else
                {
                    totales(Detalle, parseInt(DRValue), DoR)
                    descuento.val(parseInt(descuento.val()) + parseInt(DRValue));

                }
                break;
            case "1":
                 // RECARGO ---

            default:
                totales(Detalle, DRValue, DoR)
                //Declaraciones ejecutadas cuando ninguno de los valores coincide con el valor de la expresión
        }

    }
    */

     //---------EVENTS LISTENERS - VALIDACION DE CAMPOS HAS-ERROR------------//

    //quita clase has-error en caso de que se ingrese un valor.//
    //document.getElementById('bxCodigoProd')
    //    .addEventListener('keyup', function (e) {
    //        if (this.value != "") {
    //            $("#_bxCodigoProd").removeClass("has-error")
    //        };
    //    })



</script>
