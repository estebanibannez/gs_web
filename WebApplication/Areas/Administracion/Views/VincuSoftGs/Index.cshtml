<style>

    table.dataTable.select tbody tr,
    table.dataTable thead th:first-child {
        cursor: pointer; /*puntero*/
    }

   
    .contenedorCheck {
        display: block;
        position: relative;
        padding-left: 35px;
        margin-bottom: 12px;
        cursor: pointer;
        font-size: 22px;
        -webkit-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
    }

    /* Oculta la casilla de verificación predeterminada del navegador */
    .contenedorCheck input {
        position: absolute;
        opacity: 0;
        cursor: pointer;
        height: 0;
        width: 0;
    }

    /* propiedades del span */
    .checkmark {
        position: absolute;
        top: 0;
        left: 0;
        height: 20px;
        width: 20px;
        background-color: #eee;
    }

    /* evento mouse-over, add a grey background color */
    .contenedorCheck:hover input ~ .checkmark {
        background-color: #ccc;
    }

    /* cuando el checkbox está checked, add el background naranjo */
    .contenedorCheck input:checked ~ .checkmark {
        background-color: #ff6a00;
    }

    /* Crea el ticket de verificación (oculto cuando no está marcado) */
    .checkmark:after {
        content: "";
        position: absolute;
        display: none;
    }

    /* Muestra el ticket de verificación cuando esté marcado*/
    .contenedorCheck input:checked ~ .checkmark:after {
        display: block;
    }

    /* estilos del ticket */
    .contenedorCheck .checkmark:after {
        left: 7px;
        top: 5px;
        width: 5px;
        height: 10px;
        border: solid white;
        border-width: 0 3px 3px 0;
        -webkit-transform: rotate(45deg);
        -ms-transform: rotate(45deg);
        transform: rotate(45deg);
    }


</style>
<div class="box box-warning">
    <div class="box-header with-border">
        <h3 class="box-title"><i class="fa fa-exchange"></i> Vinculación documentos Softland a gs</h3>
    </div>
</div>

<div class="box-default">
    <div class="box">
        <div class="box-header with-border">
            <div class="col-md-12">
                <div class="col-md-4 col-xs-12">
                    <select class="form-control" id="SelectClientes" name="SelectClientes"></select>
                </div>

                <div class="col-md-8 col-xs-12">
                    <button class="btn btn-default pull-right" value="" id="btnVincularSoft">Vincular con Softland  <i class="fa fa-exchange"></i></button>
                </div>
            </div>
        </div>
        <div class="box-body">
            <table class="tblDatosSoftland table table-hover display responsive no-wrap" style="width:100%" id="tblDatosSoftland">
                <thead>
                    <tr>
                        <th><input name="select_all" value="1" type="checkbox"></th>
                        <th>Nombre Aux</th>
                        <th>Doc</th>
                        <th>Mes</th>
                        <th>Año</th>
                        <th>N° Documento</th>
                        <th>Total</th>
                        <th>Entrega</th>
                        @*<th>Imputación</th>*@
                        @*<th>Folio Imputación</th>*@
                        <th style="background-color:#e5e5e5">N° Softland</th>
                        <th style="background-color:#e5e5e5">N° Comprobante Softland</th>
                        <th style="background-color:#e5e5e5">Usuario Centraliza</th>
                    </tr>
                </thead>
            </table>
        </div>
    </div>
</div>

<script>
    $(function () {

    var rows_selected = [];

    $("#SelectClientes").on("change", function () {
        MostrarDatosSoftland.ajax.reload();
    });

    function retornaDatos(d) {
        return $.extend({}, d, {
            "id": $('#SelectClientes').val()
        });
    }

    var columnasDT = [
        { "data": "empty" },
        { "data": "NomAux" },
        { "data": "CTDCod" },
        { "data": "CPBMes" },
        { "data": "CPBAño" },
        { "data": "NumDocI" },
        {
            "data": "Total", "render": function (data) {

                //return new Intl.NumberFormat("de-DE", { style: "currency", currency: "CLP" }).format(data)
                return new Intl.NumberFormat().format(data);
            }
        },
        {
            "data": "Entrega", "render": function (data) {

                return moment(data).format('DD-MM-YYYY');
            }
        },
        //{
        //    "data": "Imputacion", "render": function (data) {

        //        return moment(data).format('DD-MM-YYYY');
        //    }
        //},
        { "data": "num_doc_s" },
        { "data": "num_comp_s" },
        { "data": "Usuario" }

    ]

    var MostrarDatosSoftland = GetDatos("tblDatosSoftland", "@Url.Action("GetDataSoftland", "VincuSoftGs", new { Area= "VincuSoftGs" })?", retornaDatos, columnasDT);

    var tabla;

    //funcion que Actualiza el "Seleccionar todo" .
  
    function updateDataTableSelectAllCtrl(tabla) {
        var $table = tabla.table().node();// contexto tabla
        var $chkbox_all = $('tbody input[type="checkbox"]', $table);// todos los checkbox 
        var $chkbox_checked = $('tbody input[type="checkbox"]:checked', $table);// solo los check en estado checked
        var chkbox_select_all = $('thead input[name="select_all"]', $table).get(0);

        // Si ninguna de las casillas está marcada.
        if ($chkbox_checked.length === 0) {
            chkbox_select_all.checked = false;
            if ('indeterminate' in chkbox_select_all) {
                chkbox_select_all.indeterminate = false;
            }

            // Si todas las casillas están marcadas
        } else if ($chkbox_checked.length === $chkbox_all.length) {
            chkbox_select_all.checked = true;
            if ('indeterminate' in chkbox_select_all) {
                chkbox_select_all.indeterminate = false;
            }

            // Si algunas de las casillas están marcadas
        } else {
            chkbox_select_all.checked = true;
            if ('indeterminate' in chkbox_select_all) {
                chkbox_select_all.indeterminate = true;
            }
        }
    }


    function GetDatos(grilla, url, parametros, columnas) {

        tabla = $('#' + grilla).DataTable({
            "ajax": {
                "url": url,
                "type": "POST",
                "data": parametros
            },
            //para definir propiedades a una columna en especifico..
            columnDefs: [{
                targets: 0,//selecciona la primera columna
                searchable: false,//desabilita el filtrado en la primera columna,
                orderable: false,//desabilita el orden en la primera columna,
                width: '1%',//define un ancho a la columna 0
                className: 'dt-body-center',//defino una clase a la columna 0
                render: function (data, type, full, meta) {
                    //esta wa retornará el tr con checkbox solo si el registro trae numero de comp de softland;
                    //var retorno = (full.num_comp_s != null ? `<input type="checkbox" class="i-checks" value="${full.ID_gs}">` : '');
                    var retorno = (full.num_comp_s != null ? `<label class="contenedorCheck">
                                                             <input type="checkbox" value="${full.ID_gs}">
                                                             <span class="checkmark"></span>
                                                             </label>`: '');

                    //return `<input type="checkbox" value="${full.ID_gs}">`;
                    return retorno;
                }
            }],
            columns: columnas,
            order: [1, 'asc'],
            rowCallback: function (row, data) {
                // se ejecuta antes de presentar la tabla
                // el rowCallback lo aplico para que cuando exista una recarga del datatable me valide el arreglo de obj y me mantenga los parametros.

                //concatengo el idGs + el num comprobante softland;
                //var reg = data.ID_gs + '|' + data.num_comp_s;
                var reg = { idGs: data.ID_gs, NumCent: data.num_comp_s, UsuCent: data.Usuario, centraliza: data.CpbFec };

                // Si el ID de fila está en la lista de ID de fila seleccionados
                var resp = _inArray(reg, rows_selected);
                if (resp !== -1) {
                    //if ($.inArray(reg, rows_selected) !== -1) {

                    $(row).find('input[type="checkbox"]').prop('checked', true);
                    $(row).addClass('selected');
                }

            }

        });

        return tabla;
    }

    //$('.tblDatosSoftland').on('draw.dt', function () {
    //    $('input').iCheck({
    //        checkboxClass: 'icheckbox_square-red',
    //        radioClass: 'iradio_square',
    //        increaseArea: '20%' // optional
    //    });
    //});

    function _inArray(dato, arrayObj) {
        var salida = -1;
        if (arrayObj.length == 0) { return -1;}
        $.each(arrayObj, function (indice, elemento) {
            if (elemento.idGs == dato.idGs) {
                salida = indice;
            }
        });
        return salida;
    }

    //Manejar el clic en la casilla de verificación
  
    $('#tblDatosSoftland tbody').on('click','input[type="checkbox"]', function (e) {
        //obtiene el primer elemento que coincida con el selector (tr) probando el propio elemento y atravesando sus ancestros en el árbol DOM.
        //con this hago referencia a la instancia del elemento del DOM. (#la tabla.)
        var $row = $(this).closest('tr');
        // Obtengo datos de la fila
        var data = tabla.row($row).data();
        var reg = { idGs: data.ID_gs, NumCent: data.num_comp_s, UsuCent: data.Usuario, centraliza: moment(data.CpbFec).format("YYYY-MM-DD HH:mm:ss") }; //data.ID_gs + '|' + data.num_comp_s;
        // Determino si el ID de fila está en la lista de ID de fila seleccionados
        // me retorna un -1 si el ID no se encuentra en el array rows_selected, de lo contrario si lo encuentra , retorna en indice donde se encuentra el array

        //var index = $.inArray(reg, rows_selected); 
        var index = _inArray(reg, rows_selected);

        // Si el checkbox está marcado y el ID de la fila no está en el array
        if (this.checked && index === -1) {
            //agrego al arreglo el id de la fila + el numero de centralización
            rows_selected.push(reg);

            // De lo contrario, si el checkbox no está marcado y el indice que retorno el inArray es diferente a -1 ()
        } else if (!this.checked && index !== -1) {
            //splice remueve elementos de un arreglo (recibe 2 parametros el indice y la cantidad de elementos que quiero remover en el array.)
            rows_selected.splice(index, 1);
        }

        if (this.checked) {
            // al fila le agrego la class selected
            $row.addClass('selected');
        } else {
            //de lo contrario a la fila le remuevo la clase
            $row.removeClass('selected');
        }
        // Actualiza el estado del "Seleccionar todo"
        updateDataTableSelectAllCtrl(tabla);

        console.log(rows_selected);
        // Evita que el evento de clic se propage al padre
        e.stopPropagation();
    });

    //  Manejar clic en celdas de la tabla con casillas de verificación
    $('#tblDatosSoftland').on('click', 'tbody td, thead th:first-child', function (e) {
        //si hago clic en el td me hace clic en el checkbox
        $(this).parent().find('input[type="checkbox"]').trigger('click');
    });
  

        // cuando hago click en el check "Select all"
 
    $('thead input[name="select_all"]', tabla.table().container()).on('click', function (e) {
        //si esta checkeado el seleccionar todo
        if (this.checked) {
            //si no está en estado check ejecuto el click
            $('#tblDatosSoftland tbody input[type="checkbox"]:not(:checked)').trigger('click');
        } else {
            $('#tblDatosSoftland tbody input[type="checkbox"]:checked').trigger('click');
            //elimino los obj del arreglo en caso de deseleccionar todo.
            rows_selected.splice(0, rows_selected.length);
        }

        e.stopPropagation();
    });

    tabla.on('draw', function () {
        updateDataTableSelectAllCtrl(tabla);
    });

    //---------- Click vincular con softland

   $('#btnVincularSoft').click(function () {
        
        if (rows_selected.length == 0)
            mensajeExito("Mensaje", "Seleccione al menos un documento...");
        else {
            vinculaSoftGs('@Url.Action("VinculaSoftGs", "VincuSoftGs", new { Area = "Administracion" })', rows_selected);
        }
    });


    //--------------------------Cargo el listado de usuarios con la cantidad de documentos por centralizar

    $.ajax({
        async: true,
        type: 'POST',
        url: '@Url.Action("listadoClientes", "VincuSoftGs")',
        success: function (result, id) {
            $('#SelectClientes').empty(); // vacio el select de los clientes
            var element = '<option selected disabled>--Seleccione--</option>';
            $.each(result.data, function (k, v) {
                element += "<option value = '" + v.Value + "'>" + v.Text + " </option>"
            });

            $("#SelectClientes").append(element);// se despliega el select de clientes
        },
        error: function () {
            $("#content").html('<h2>Se ha generado un error</h2>');
        }
    });

    //funcion para vincular registro seleccionado
    function vinculaSoftGs(url, registros) {
        $.ajax({
            url: url,
            type: 'POST',
            data: { PairValues: registros },
                //JSON.stringify({ PairValues: registros }),
            success: function (response) {
                mensajeExito("Vinculación Éxitosa", response.mensaje);
                MostrarDatosSoftland.ajax.reload();
            },
            error: function (response) {
                    mensajeError("Error", response.mensaje)
                }
        });
    }
    });

</script>
